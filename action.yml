name: upgrade
inputs:
  application:
    required: true
  repository:
    required: true
  branch:
     required: true

runs:
  using: "composite"
  steps:
    - name: Set envionment variables
      run: |
        echo "DBUSERNAME=${{inputs.application}}-ci" >> "$GITHUB_OUTPUT"
        echo "TEST=${{matrix.database}} >> "$GITHUB_OUTPUT"
        echo "DBTYPE=${{matrix.database == 'pgsql' && 'PostgreSQL' || 'MySQLi'}} >> "$GITHUB_OUTPUT"
        echo "DBHOST=127.0.0.1  >> "$GITHUB_OUTPUT"
        echo "DBNAME=${{inputs.application}}-ci  >> "$GITHUB_OUTPUT"
        echo "DBPASSWORD=${{inputs.application}}-ci  >> "$GITHUB_OUTPUT"
        echo "APPLICATION=${{inputs.application}} >> "$GITHUB_OUTPUT"

      shell: bash

    - uses: actions/checkout@v4

    - name: Install postgres server
      if: ${{matrix.database == 'pgsql'}}
      run: |
        sudo apt install postgresql-14 postgresql-contrib
        sudo dpkg-reconfigure locales
        sudo sed -i -E 's\peer|scram-sha-256\trust\g' /etc/postgresql/14/main/pg_hba.conf
      shell: bash

    - name: Install mysql server
      if: ${{matrix.database == 'mysql'}}
      run: |
        sudo apt install -q -y mysql-server mysql-client
        sudo service mysql start
        sudo mysqladmin -u root -p'root' password ''
      shell: bash
    - name: Install mariadb server
      if: ${{matrix.database == 'mariadb'}}
      uses: ankane/setup-mariadb@v1
      with:
        mariadb-version: "10.11"
    
    - name: Install php environment
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{matrix.php-version}}
        extensions: bcmath, bz2, curl, gd, intl, mbstring, mysql,mysqlnd, mysqli, opcache, pdo_mysql, pgsql, json,soap, xml, zip
        coverage: xdebug
      env:
        update: true
    
    - name: Install  ${{inputs.application}}
      run: |
        git clone -b ${{inputs.branch || github.head_ref || github.ref_name }} https://github.com/${{inputs.repository}}/${{inputs.application}} ~/${{inputs.application}} --depth 1
        cd ~/${{inputs.application}}
        git submodule update --init --recursive
      shell: bash

  
    - name: Install  dependencies
      run: |
        cd ~/${{inputs.application}}
        ${{ github.workspace }}/.github/actions/install-composer-dependencies.sh
        npm i g -npm && npm i @vue/cli-service && npm i cypress && npm install && npm run build
      shell: bash


    - name: Download datasets
      run: |
        cd ~/${{inputs.application}}
        git clone https://github.com/pkp/datasets --depth 1
      shell: bash

    - name: Upgrade from ${{matrix.dataset-branch}}  for  ${{matrix.database}}
      run: |
        cd ~/${{inputs.application}}
        #DATASET_BRANCHES=("stable-3_4_0" "stable-3_3_0" "stable-3_2_1" "stable-3_2_0")
        DATASET_BRANCHES=("stable-3_4_0")
        for DATASET_BRANCH in "${DATASET_BRANCHES[@]}"
        do
          ${{ github.workspace }}/.github/actions/prepare-tests.sh
          echo ":heavy_check_mark: Prepare tests for  ${DATASET_BRANCH}" >> $GITHUB_STEP_SUMMARY
          ${{ github.workspace }}/.github/actions/upgrade-application.sh
          echo ":heavy_check_mark: Upgrade from ${DATASET_BRANCH}  for  ${{matrix.database}}" >> $GITHUB_STEP_SUMMARY

        done
      env:
        TEST: ${{matrix.database}}
        DBTYPE: ${{matrix.database == 'pgsql' && 'PostgreSQL' || 'MySQLi'}}
        DBHOST: 127.0.0.1
        DBNAME: ${{inputs.application}}-ci
      shell: bash




